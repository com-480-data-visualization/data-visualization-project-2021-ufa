{"version":3,"sources":["webpack://data-visualization-ufa/webpack/runtime/chunk loaded","webpack://data-visualization-ufa/./src/scripts/common.js","webpack://data-visualization-ufa/./src/scripts/bar.js","webpack://data-visualization-ufa/./src/styles/_export.scss","webpack://data-visualization-ufa/./src/scripts/api/arxiv.js","webpack://data-visualization-ufa/./src/scripts/cloud.js","webpack://data-visualization-ufa/./src/scripts/graph.js","webpack://data-visualization-ufa/./src/scripts/keywords.js","webpack://data-visualization-ufa/./src/scripts/time.js","webpack://data-visualization-ufa/./src/scripts/slider.js","webpack://data-visualization-ufa/./src/scripts/index.js","webpack://data-visualization-ufa/./src/scripts/page.js","webpack://data-visualization-ufa/webpack/bootstrap","webpack://data-visualization-ufa/webpack/runtime/amd define","webpack://data-visualization-ufa/webpack/runtime/amd options","webpack://data-visualization-ufa/webpack/runtime/define property getters","webpack://data-visualization-ufa/webpack/runtime/global","webpack://data-visualization-ufa/webpack/runtime/hasOwnProperty shorthand","webpack://data-visualization-ufa/webpack/runtime/make namespace object","webpack://data-visualization-ufa/webpack/runtime/node module decorator","webpack://data-visualization-ufa/webpack/runtime/jsonp chunk loading","webpack://data-visualization-ufa/webpack/startup"],"names":["deferred","CATEGORIES","Object","freeze","label","keywords","map","obj","idx","index","getCategoryIndexAndLabel","name","i","length","category","j","includes","margin","widthChart","heightChart","categoriesColors","d3","color","d","id","ALL","BarPlot","this","dataBar","container","svg","append","svgBar","attr","join","x","range","domain","padding","call","style","text","y","graph","categoriesNames","categoriesCounts","update","classed","selectAll","remove","tooltip","g","select","data","enter","bandwidth","on","_","selectedCategory","hoveredBar","updateTooltip","transition","duration","weightRatio","delay","e","barRect","target","getBoundingClientRect","containerRect","node","top","left","width","toLocaleString","toFixed","year","RectangleVignetteFilter","uniforms","value","THREE","variables","vertexShader","fragmentShader","Cloud","papers","papersKeywords","domContainer","document","getElementById","containerAspect","clientWidth","clientHeight","aspect","height","tooltipLink","tooltipDescription","tooltipAuthors","tooltipCategories","scene","camera","initialScale","position","z","renderer","setSize","domElement","classList","add","appendChild","composer","EffectComposer","renderPass","RenderPass","addPass","vignettePass","ShaderPass","renderToScreen","geometry","parentContainer","background","bbMin","Number","MAX_VALUE","bbMax","clone","negate","entries","forEach","categories","date","categoriesList","split","firstCategory","categoryIndex","particle","transparent","opacity","Date","getFullYear","visible","seedrandom","userData","min","max","selectedObject","setZ","zoom","scaleExtent","wheelDelta","event","deltaY","deltaMode","sourceEvent","newZ","transform","k","offsetX","offsetY","vector","unproject","direction","sub","normalize","distance","multiplyScalar","set","movementX","movementY","vFOV","fov","Math","PI","scaleHeight","tan","currentScale","clamp","view","raycaster","previousSelected","bounds","mouse","clientX","clientY","setFromCamera","intersections","intersectObjects","children","filter","intersection","object","material","urlForPaper","url","parameters","urlObj","URL","key","searchParams","createUrl","fetch","then","response","str","window","DOMParser","parseFromString","getPaperMetadata","xml","entry","querySelector","title","authors","querySelectorAll","authorsNames","textContent","slice","html","render","requestAnimationFrame","shown","particles","selectedList","selected","Set","has","Graph","graphData","paperCounts","containerDom","simulation","initializedYears","cloud","barPlot","linePlot","stop","links","nodes","props","refNodes","nodesById","fromEntries","refNode","prop","force","strength","hoveredNode","sameYearDate","selectedDate","currDate","getMonth","updateTooltipPosition","updateHighlights","connectedSet","connectedWeights","dataLine","l","neighbour","source","push","weight","items","currValues","item","weightSum","reduce","a","b","connectedWeightRatios","sort","gNodes","gLinks","setData","setCategory","gClusters","log","clampX","clampY","groups","mean","xs","ys","aggregated","nodesIn","stopPropagation","Keywords","placeholder","keywordReset","yearData","topCategoriesMatchForKeyword","keyword","sizeTop","topCategories","t","thatKeyword","count","cat1","cat2","keywordsData","counts","total","array","maxCount","layout","d3cloud","size","words","rotate","font","fontSize","random","match","start","hoveredWord","word","top3","categoryElementId","countElementId","LinePlot","lineColor","basedLine","line","defined","isNaN","values","nice","ticks","mainPath","datum","totalLength","getTotalLength","Slider","minValue","maxValue","keys","yearInt","parseInt","tickAllTime","sliderTime","sliderBottom","step","tickFormat","toString","default","gTime","catGraph","sliderReset","val","setYear","Promise","all","filename","json","getElementsByTagName","visibility","slider","initialize","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","m","amdD","Error","amdO","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","definition","o","defineProperty","enumerable","get","globalThis","Function","prototype","hasOwnProperty","r","Symbol","toStringTag","nmd","paths","installedChunks","143","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"mappings":"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","file":"js/app.bc439b4f.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","import * as d3 from 'd3';\n\nexport const CATEGORIES = Object.freeze([\n  {\n    label: 'Quantum Physics',\n    keywords: ['quant-ph'],\n  },\n  {\n    label: 'Astrophysics',\n    keywords: ['astro-ph'],\n  },\n  {\n    label: 'High Energy Physics',\n    keywords: ['hep-ph', 'hep-th', 'hep-lat', 'hep-ex'],\n  },\n  {\n    label: 'Condensed Matter Physics',\n    keywords: ['cond-mat'],\n  },\n  {\n    label: 'General Physics',\n    keywords: ['physics', 'nucl-ex'],\n  },\n  {\n    label: 'Computer Science',\n    keywords: ['cs'],\n  },\n  {\n    label: 'Mathematics',\n    keywords: ['math', 'stat', 'nlin', 'q-alg'],\n  },\n  {\n    label: 'Biology',\n    keywords: ['bio'],\n  },\n  {\n    label: 'Economics',\n    keywords: ['econ', 'q-fin'],\n  },\n  {\n    label: 'Other',\n    keywords: null,\n  },\n].map((obj, idx) => ({ ...obj, index: idx })));\n\nexport const getCategoryIndexAndLabel = name => {\n  for (let i = 0; i < CATEGORIES.length; i++) {\n    const category = CATEGORIES[i];\n    if (category.keywords === null) {\n      return { index: i, label: category.label };\n    }\n    for (let j = 0; j < category.keywords.length; j++) {\n      if (name.includes(category.keywords[j])) {\n        return { index: i, label: category.label };\n      }\n    }\n  }\n};\n\n// TODO rename/clean that\nexport const margin = { top: 5, right: 30, bottom: 70, left: 40 };\nexport const widthChart = 260 - margin.left - margin.right;\nexport const heightChart = 200 - margin.top - margin.bottom;\n\nexport const categoriesColors = d3.schemeTableau10;\n\nexport const color = d => {\n  const { index, label } = getCategoryIndexAndLabel(d.id);\n  return label === 'Other' ? 'gray' : categoriesColors[index];\n};\n\nexport const ALL = 'all';\n","import * as d3 from 'd3';\nimport { ALL, color, heightChart, margin, widthChart, getCategoryIndexAndLabel } from './common';\n\nexport const SIMILARITY_BAR_N = 5;\n\n\nexport class BarPlot {\n\n  constructor() {\n    this.dataBar = [];\n\n    this.container = d3.select('#similar-bar');\n    this.svg = this.container.append('svg');\n\n    this.svgBar = this.svg\n      .attr('viewBox', [0, 0, widthChart + margin.left + margin.right, heightChart + margin.top + margin.bottom].join(' '))\n      .attr('class', 'max-w-full max-h-full')\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // X axis\n    this.x = d3.scaleBand()\n      .range([0, widthChart])\n      .domain(this.dataBar.map(d => d.id))\n      .padding(0.2);\n\n    this.svgBar.append('g')\n      .attr('transform', `translate(0,${heightChart})`)\n      .call(d3.axisBottom(this.x));\n\n    // X axis label\n    this.svgBar.append('text')\n      .attr('transform', 'translate(' + (- margin.left / 2) + ',' + (heightChart + margin.bottom / 3) + ')rotate(-45)')\n      .style('text-anchor', 'middle')\n      .style('font-weight', 'bold')\n      .style('font-size', '50%')\n      .text('categories');\n\n    // Add Y axis\n    this.y = d3.scaleLinear()\n      .domain([0, 100])\n      .range([heightChart, 0]);\n    this.svgBar.append('g')\n      .call(d3.axisLeft(this.y));\n\n    this.svgBar.append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('x', 0 - (heightChart / 2))\n      .attr('y', 0 - margin.left / 3)\n      .style('font-weight', 'bold')\n      .style('font-size', '50%')\n      .style('text-anchor', 'middle')\n      .text('weight ratios');\n  }\n\n  initialize(graph) {\n    this.graph = graph;\n  }\n\n  setData(dataBar, categoriesNames, categoriesCounts) {\n    this.dataBar = dataBar;\n    this.categoriesNames = categoriesNames;\n    this.categoriesCounts = categoriesCounts;\n    this.update();\n  }\n\n  update() {\n    this.svgBar.classed('opacity-20', !this.dataBar.length);\n\n    this.svgBar.selectAll('mybar').remove();\n    this.svgBar.selectAll('rect').remove();\n    this.svgBar.selectAll('.axis-bottom-text').remove();\n    this.svgBar.selectAll('.tick').remove();\n\n    const tooltip = d3.select('#bar-tooltip');\n\n    this.x = d3.scaleBand()\n      .range([0, widthChart])\n      .domain(this.dataBar.map(d => d.id))\n      .padding(0.2);\n\n    this.svgBar.append('g')\n      .attr('transform', `translate(0,${heightChart})`)\n      .call(d3.axisBottom(this.x))\n      .call(g => g.select('.domain').remove())\n      .selectAll('text')\n      .classed('axis-bottom-text', true)\n      .attr('transform', 'translate(-10,0)rotate(-45)')\n      .style('text-anchor', 'end')\n      .style('font-size', '70%');\n\n    // Bars\n    this.svgBar.selectAll('mybar')\n      .data(this.dataBar)\n      .enter()\n      .append('rect')\n      .attr('x', d => this.x(d.id))\n      .attr('width', this.x.bandwidth())\n      .attr('fill', color)\n      // no bar at the beginning thus:\n      .attr('height', () => heightChart - this.y(0)) // always equal to 0\n      .attr('y', () =>  this.y(0))\n      .classed('cursor-pointer', true)\n      .on('click', (_, d) => {\n        this.graph.selectedCategory = d.id;\n        this.graph.update();\n        hoveredBar = null;\n        updateTooltip();\n      });\n\n    const hundred = 100;\n\n    // Animation\n\n\n    this.svgBar.selectAll('rect')\n      .transition()\n      .duration(200)\n      .attr('y', d => this.y(d.weightRatio * hundred))\n      .attr('height', d => heightChart - this.y(d.weightRatio * hundred))\n      .delay((d, i) => (i * 50));\n\n    let hoveredBar = null;\n    const bars = this.svgBar.selectAll('rect');\n    bars\n      .on('mouseover', (e, d) => {\n        hoveredBar = d;\n        const barRect = e.target.getBoundingClientRect();\n        const containerRect = this.container.node().getBoundingClientRect();\n\n        tooltip\n          .style('top', (barRect.top - containerRect.top) + 'px')\n          .style('left', (barRect.left - containerRect.left + barRect.width / 2) + 'px');\n\n        updateTooltip();\n      })\n      .on('mouseout', () => {\n        hoveredBar = null;\n        updateTooltip();\n      });\n\n    const updateTooltip = () => {\n      d3.select('#bar-tooltip-id').text(hoveredBar && hoveredBar.id).style('color', hoveredBar && color(hoveredBar));\n      d3.select('#bar-tooltip-name').text(hoveredBar &&\n          (this.categoriesNames[hoveredBar.id] || getCategoryIndexAndLabel(hoveredBar.id).label));\n      d3.select('#bar-tooltip-count').text(hoveredBar && this.categoriesCounts[hoveredBar.id].toLocaleString());\n      d3.select('#bar-tooltip-percent').text(hoveredBar &&\n           ('(' + (hoveredBar.weightRatio * hundred).toFixed(2) + '% of '));\n      d3.select('#bar-tooltip-category').text(hoveredBar &&\n            (this.graph.selectedCategory + ')')).style('color', hoveredBar && color({ id: this.graph.selectedCategory }));\n      d3.select('#bar-tooltip-year').text(hoveredBar && (this.graph.year === ALL) ? 'All time period' : ('Year ' + this.graph.year));\n\n      tooltip.classed('hidden', !hoveredBar);\n    };\n\n  }\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"background-color\":\"#fff2e6\"};","export const urlForPaper = id => `https://arxiv.org/abs/${id}`;\n\nconst URL_API_QUERY = 'https://export.arxiv.org/api/query';\n\nconst createUrl = (url, parameters = {}) => {\n  const urlObj = new URL(url);\n  Object.entries(parameters).forEach(([key, value]) => urlObj.searchParams.append(key, value));\n  return urlObj;\n};\n\nconst fetchXML = url => fetch(url)\n  .then(response => response.text())\n  .then(str => (new window.DOMParser()).parseFromString(str, 'text/xml'));\n\nexport const getPaperMetadata = id => fetchXML(createUrl(URL_API_QUERY, { 'id_list': id }));\n","import * as THREE from 'three';\nimport * as d3 from 'd3';\nimport * as seedrandom from 'seedrandom';\nimport variables from '../styles/_export.scss';\nimport { getPaperMetadata, urlForPaper } from './api';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { ALL, categoriesColors, color, getCategoryIndexAndLabel } from './common';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\n\nconst RectangleVignetteFilter = {\n  uniforms: {\n    'tDiffuse': { value: null },\n    'color': { value: new THREE.Color(variables['background-color']) },\n  },\n  vertexShader: [\n    'varying vec2 vUv;',\n    'void main() {',\n    '  vUv = uv;',\n    '  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);',\n    '}',\n  ].join('\\n'),\n  fragmentShader: [\n    'uniform sampler2D tDiffuse;',\n    'uniform vec3 color;',\n    'varying vec2 vUv;',\n    'void main() {',\n    '  vec4 texel = texture2D(tDiffuse, vUv);',\n    '  vec2 p = vUv * 2.0 - 1.0;',\n    '  float b = 5.0;',\n    '  float d = clamp(b * (1.0 - abs(p.x)), 0.0, 1.0) * clamp(b * (1.0 - abs(p.y)), 0.0, 1.0);',\n    '  gl_FragColor.xyz = texel.xyz * d + color.xyz * (1.0 - d);',\n    '}',\n  ].join('\\n'),\n};\n\n\nexport class Cloud {\n\n  constructor(papers, papersKeywords) {\n    this.year = ALL;\n\n    this.papersKeywords = papersKeywords;\n\n    this.domContainer = document.getElementById('papers-cloud');\n    const containerAspect = this.domContainer.clientWidth / this.domContainer.clientHeight;\n    this.aspect = containerAspect; // If we need to fix the aspect, change this value\n    this.width = containerAspect < this.aspect ? this.domContainer.clientWidth : this.domContainer.clientHeight * this.aspect;\n    this.height = this.width / this.aspect;\n\n    this.tooltip = d3.select('#cloud-tooltip');\n    this.tooltipLink = d3.select('#cloud-tooltip-link');\n    this.tooltipDescription = d3.select('#cloud-tooltip-description');\n    this.tooltipAuthors = d3.select('#cloud-tooltip-authors');\n    this.tooltipCategories = d3.select('#cloud-tooltip-categories');\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(10, this.aspect, 0.1, 10);\n    this.initialScale = 2;\n    this.camera.position.z = this.initialScale;\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.domElement.classList.add('m-auto');\n    this.domContainer.appendChild(this.renderer.domElement);\n\n    this.composer = new EffectComposer(this.renderer);\n    this.composer.setSize(this.width, this.height);\n    const renderPass = new RenderPass(this.scene, this.camera);\n    this.composer.addPass(renderPass);\n    const vignettePass = new ShaderPass(RectangleVignetteFilter);\n    vignettePass.renderToScreen = true;\n    this.composer.addPass(vignettePass);\n    const squareSize = 0.004;\n    this.geometry = new THREE.PlaneGeometry(squareSize, squareSize);\n\n    this.parentContainer = new THREE.Object3D();\n    this.scene.add(this.parentContainer);\n\n    this.scene.background = new THREE.Color(variables['background-color']);\n\n    let bbMin = new THREE.Vector3(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE), bbMax = bbMin.clone().negate();\n    Object.entries(papers).forEach(([id, { categories, x, y, date }]) => {\n      const categoriesList = categories.split(' ');\n      const firstCategory = categoriesList[0];\n      const categoryIndex = getCategoryIndexAndLabel(firstCategory).index;\n      const particle = new THREE.Mesh(this.geometry, new THREE.MeshBasicMaterial({\n        transparent: false,\n        color: new THREE.Color(categoriesColors[categoryIndex]),\n        opacity: 0.1,\n        //side: THREE.DoubleSide,\n      }));\n      const year = new Date(date).getFullYear();\n\n      this.parentContainer.add(particle);\n      particle.visible = false; // Hidden by default\n\n      // Randomize the z-coordinates for depth effect (without affecting the data)\n      const zRange = 0.2;\n      particle.position.z = -zRange * seedrandom(id)();\n      particle.position.x = x;\n      particle.position.y = y;\n\n      // Custom properties\n      particle.userData = { id, categories: categoriesList, year };\n\n      bbMin.min(particle.position);\n      bbMax.max(particle.position);\n    });\n\n    this.selectedObject = null;\n\n    const minScale = 0.5, maxScale = 4;\n    bbMin.setZ(minScale);\n    bbMax.setZ(maxScale);\n    const zoom = d3.zoom()\n      .scaleExtent([minScale, maxScale])\n    // Function is taken from: https://github.com/d3/d3-zoom/blob/master/README.md#zoom_wheelDelta\n    // Direction was inverted\n      .wheelDelta(event => event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002))\n      .on('zoom', event => {\n        this.selectedObject = null;\n        this.tooltip.classed('hidden', true);\n\n        if (event.sourceEvent) {\n          const newZ = event.transform.k;\n          if (newZ !== this.camera.position.z) {\n            const { offsetX, offsetY } = event.sourceEvent;\n            const vector = new THREE.Vector3(\n              offsetX / this.width * 2 - 1,\n              -(offsetY / this.height) * 2 + 1,\n              1\n            );\n            vector.unproject(this.camera);\n            const direction = vector.sub(this.camera.position).normalize();\n            const distance = (newZ - this.camera.position.z) / direction.z;\n            const position = this.camera.position.clone().add(direction.multiplyScalar(distance));\n            this.camera.position.set(position.x, position.y, newZ);\n          } else {\n            const { movementX, movementY } = event.sourceEvent;\n            const vFOV = this.camera.fov * Math.PI / 180;\n            const scaleHeight = 2 * Math.tan(vFOV / 2) * this.camera.position.z;\n            const currentScale = this.height / scaleHeight;\n            this.camera.position.set(this.camera.position.x - movementX / currentScale,\n              this.camera.position.y + movementY / currentScale, this.camera.position.z);\n          }\n          this.camera.position.clamp(bbMin, bbMax);\n        }\n      });\n\n    // Add zoom listener\n    const view = d3.select(this.renderer.domElement).style('cursor', 'pointer');\n    view.call(zoom).call(zoom.transform, d3.zoomIdentity.scale(this.initialScale));\n    view.call(zoom).on('dblclick.zoom', null);\n\n    const raycaster = new THREE.Raycaster();\n\n    d3.select(this.renderer.domElement).on('click', e => {\n      const previousSelected = this.selectedObject;\n      this.selectedObject = null;\n\n      const bounds = this.renderer.domElement.getBoundingClientRect();\n      const mouse = { x: ((e.clientX - bounds.left) / this.width) * 2 - 1, y: -((e.clientY - bounds.top) / this.height) * 2 + 1 };\n      raycaster.setFromCamera(mouse, this.camera);\n      const intersections = raycaster\n        .intersectObjects(this.scene.children, true)\n        .filter(intersection => intersection.object.visible)\n        .filter(intersection => !intersection.object.material.transparent);\n      if (intersections.length > 0) {\n        const intersection = intersections[0];\n        this.selectedObject = intersection.object;\n\n        const id = this.selectedObject.userData.id;\n\n        if (this.selectedObject !== previousSelected) {\n          this.tooltip.classed('hidden', false);\n          this.tooltipLink.text(id).attr('href', urlForPaper(id));\n          this.tooltipDescription.text('...');\n          this.tooltipAuthors.text('...');\n          this.tooltipCategories.text('...');\n\n\n          getPaperMetadata(id).then(xml => {\n            if (this.selectedObject !== null && this.selectedObject.userData.id === id) { // Verify that the object is still selected\n              const entry = xml.querySelector('feed > entry');\n              const title = entry.querySelector('title');\n              const authors = entry.querySelectorAll('author');\n              let authorsNames = '';\n\n              for (let i = 0; i < authors.length; i++) {\n                authorsNames += (authors[i].querySelector('name').textContent + ', ');\n              }\n              authorsNames = authorsNames.slice(0, authorsNames.length - 2);\n\n              this.tooltipDescription.text(title.textContent);\n              this.tooltipAuthors.text(authorsNames);\n              this.tooltipCategories.html(null);\n              this.tooltipCategories\n                .selectAll('span')\n                .data(this.selectedObject.userData.categories)\n                .enter()\n                .append('span')\n                .text(d => d)\n                .style('color', d => color({ id: d }))\n                .classed('px-1', true)\n                .classed('text-glow', true);\n            }\n          });\n        }\n      } else {\n        this.tooltip.classed('hidden', true);\n      }\n    });\n\n\n    const render = () => {\n      this.composer.render();\n      const c = 0.2;\n      if (this.selectedObject !== null) {\n        this.camera.position.x += (this.selectedObject.position.x - this.camera.position.x) * c;\n        this.camera.position.y += (this.selectedObject.position.y - this.camera.position.y) * c;\n      }\n      requestAnimationFrame(render);\n    };\n\n    // Start render loop\n    render();\n  }\n\n  initialize(graph, keywords) {\n    this.graph = graph;\n    this.keywords = keywords;\n  }\n\n  setYear(year) {\n    this.year = year;\n    this.update();\n  }\n\n  update() {\n    this.tooltip.classed('hidden', true);\n\n    const selectedCategory = this.graph.selectedCategory;\n    const maxPointsShown = 2500;\n    let shown = 0;\n    const particles = this.parentContainer.children;\n    const selectedList = !!this.keywords.selected && new Set(this.keywords.papersKeywords.papers[this.keywords.selected] || []);\n    for (let i = 0; i < particles.length; i++) {\n      const particle = particles[i];\n      const data = particle.userData;\n      const visible = shown < maxPointsShown\n        && (this.year === ALL || data.year === this.year);\n      const transparent = (!!selectedCategory && !data.categories.includes(selectedCategory))\n        || (!!this.keywords.selected && !selectedList.has(data.id));\n      particle.visible = visible;\n      if (visible) {\n        shown++;\n      }\n      particle.material.transparent = transparent;\n    }\n  }\n}\n\n\n","import * as d3 from 'd3';\nimport variables from '../styles/_export.scss';\nimport { SIMILARITY_BAR_N } from './bar';\nimport { ALL, CATEGORIES, categoriesColors, color, getCategoryIndexAndLabel } from './common';\n\n\nexport class Graph {\n\n  constructor(categoriesNames, graphData, categoriesCounts, paperCounts) {\n    this.container = d3.select('#categories-graph');\n\n    const containerDom = this.container.node();\n    this.aspect = containerDom.clientWidth / containerDom.clientHeight;\n    this.width = 1000;\n    this.height = this.width / this.aspect;\n\n    this.year = ALL;\n\n    this.categoriesNames = categoriesNames;\n    this.graphData = graphData;\n    this.categoriesCounts = categoriesCounts;\n    this.paperCounts = paperCounts;\n\n    this.simulation = null;\n\n    this.selectedCategory = null;\n\n    this.initializedYears = new Set([ALL]);\n  }\n\n  initialize(cloud, barPlot, linePlot, keywords) {\n    this.cloud = cloud;\n    this.linePlot = linePlot;\n    this.barPlot = barPlot;\n    this.keywords = keywords;\n  }\n\n  setYear(year) {\n    this.year = year;\n    this.update();\n  }\n\n  update() {\n    if (this.simulation) { // Cancel previous simulation, if any\n      this.simulation.stop();\n    }\n\n    this.container.selectAll('*').remove();\n\n    this.svg = d3.create('svg')\n      .attr('viewBox', [0, 0, this.width, this.height].join(' '))\n      .attr('class', 'max-w-full max-h-full overflow-visible');\n\n    const links = this.graphData[this.year].links;\n    const nodes = this.graphData[this.year].nodes;\n\n    if (!this.initializedYears.has(this.year)) { // Preserve the shape of the graph across years\n      this.initializedYears.add(this.year);\n      const props = ['x', 'y', 'vx', 'vy'];\n      const refNodes = this.graphData[ALL].nodes;\n      const nodesById = Object.fromEntries(nodes.map(obj => [obj.id, obj]));\n      refNodes.map(refNode => {\n        const node = nodesById[refNode.id];\n        if (node) {\n          props.forEach(prop => {\n            const value = refNode[prop];\n            if (value) {\n              node[prop] = value;\n            }\n          });\n        }\n      });\n    }\n\n    const force = 0.1;\n    const charge = 150;\n    this.simulation = d3.forceSimulation(nodes)\n      .force('link', d3.forceLink(links).id(d => d.id))\n      .force('charge', d3.forceManyBody().strength(-charge))\n      .force('forceX', d3.forceX().strength(force / this.aspect))\n      .force('forceY', d3.forceY().strength(force * this.aspect))\n      .force('center', d3.forceCenter(this.width / 2, this.height / 2));\n\n    let hoveredNode = null;\n\n    const tooltip = d3.select('#graph-tooltip');\n\n    let sameYearDate = (date, selectedDate) => {\n      let currDate = new Date(date);\n      if (selectedDate !== ALL) {\n        return new Date(2000, currDate.getMonth() + 1, 0);\n      }\n      return currDate;\n    };\n    const updateTooltipPosition = () => {\n      const node = hoveredNode;\n      if (node) {\n        const containerDom = this.container.node();\n        tooltip\n          .style('top', (node.y / this.height * containerDom.clientHeight) + 'px')\n          .style('left', (node.x / this.width * containerDom.clientWidth) + 'px');\n      }\n    };\n\n    const updateTooltip = () => {\n      updateTooltipPosition();\n\n      d3.select('#categories-selected-category').text(hoveredNode && hoveredNode.id).style('color', hoveredNode && color(hoveredNode));\n      d3.select('#categories-selected-field').text(hoveredNode &&\n        (this.categoriesNames[hoveredNode.id] || getCategoryIndexAndLabel(hoveredNode.id).label));\n      d3.select('#categories-selected-count').text(hoveredNode && this.categoriesCounts[this.year][hoveredNode.id].toLocaleString());\n      d3.select('#categories-selected-year').text(hoveredNode && ('(' + ((this.year === ALL) ? ('All time period') : ('year ' + this.year)) + ')'));\n\n      tooltip.classed('hidden', !hoveredNode);\n    };\n\n    const updateHighlights = () => {\n      const category = this.selectedCategory;\n      const connectedSet = new Set();\n      const connectedWeights = [];\n      const dataLine = [];\n      if (category) {\n        connectedSet.add(category);\n        links.forEach(l => {\n          let neighbour = null;\n          if (l.source.id === category) {\n            neighbour = l.target.id;\n          } else if (l.target.id === category) {\n            neighbour = l.source.id;\n          }\n          if (neighbour) {\n            connectedSet.add(neighbour);\n            connectedWeights.push({ id: neighbour, weight: l.weight });\n          }\n        });\n        let items = this.paperCounts[category][this.year]['count'];\n        let date = this.paperCounts[category][this.year]['date'];\n        let currValues = [];\n        items.forEach((item, i) => (currValues.push({ date: sameYearDate(date[i], this.year), value: item })));\n        dataLine.push({ 'time': this.year, 'values': currValues });\n\n        if (this.year !== ALL && (this.year - 1) in this.paperCounts[category]) {\n          items = this.paperCounts[category][this.year - 1]['count'];\n          date = this.paperCounts[category][this.year - 1]['date'];\n          currValues = [];\n          items.forEach((item, i) => (currValues.push({ date: sameYearDate(date[i], this.year), value: item })));\n          dataLine.push({ 'time': 'prevYear', 'values': currValues });\n        }\n      }\n      const weightSum = connectedWeights.map(({ weight }) => weight).reduce((a, b) => a + b, 0);\n      const connectedWeightRatios = connectedWeights\n        .map(obj => ({ ...obj, weightRatio: obj.weight / weightSum }))\n        .sort((x, y) => d3.descending(x.weightRatio, y.weightRatio))\n        .slice(0, SIMILARITY_BAR_N);\n\n      gNodes.classed('opacity-10', category ? d => !connectedSet.has(d.id) : false);\n      gNodes.attr('stroke', d => this.selectedCategory !== null && this.selectedCategory === d.id ? 'black' : variables['background-color']);\n      gLinks.classed('hidden', category ? d => d.source.id !== category && d.target.id !== category : false);\n\n      this.barPlot.setData(connectedWeightRatios, this.categoriesNames, this.categoriesCounts[this.year]);\n      this.linePlot.setData(dataLine, category ? color({ id: category }) : '', this.year);\n\n      this.cloud.update();\n      this.keywords.setCategory(this.selectedCategory ? this.selectedCategory : ALL);\n      const graphReset = d3.select('#categories-graph-reset');\n      //console.log(this.selectedCategory);\n      graphReset.classed('invisible', this.selectedCategory === null);\n    };\n\n    const gClusters = this.svg.append('g')\n      .attr('font-weight', 'bold')\n      .style('cursor', 'default')\n      .style('user-select', 'none')\n      .attr('text-anchor', 'middle')\n      .selectAll('text')\n      .data(CATEGORIES)\n      .join('text')\n      .attr('fill', d => categoriesColors[d.index])\n      .text(d => d.label);\n\n    const gLinks = this.svg.append('g')\n      .attr('stroke', 'black')\n      .attr('stroke-opacity', 0.5)\n      .selectAll('line')\n      .data(links.filter(d => d.weight >= 100)) // Only display relevant edges\n      .join('line')\n      // Don't apply transition on already transparent objects, this is a serious bottleneck!\n      //.attr('class', 'transition-opacity duration-250')\n      .attr('stroke-width', d => 0.00025 * d.weight + 0.05);\n\n    const gNodes = this.svg.append('g')\n      .attr('stroke', variables['background-color'])\n      .attr('stroke-width', 2.5)\n      .style('cursor', 'pointer')\n      .selectAll('circle')\n      .data(nodes)\n      .join('circle')\n      .attr('class', 'transition-opacity duration-250')\n      .attr('r', d => Math.log(this.categoriesCounts[this.year][d.id]) * 0.9)\n      .attr('fill', color);\n\n    this.simulation.on('tick', () => {\n      const clampX = x => Math.max(0, Math.min(this.width, x));\n      const clampY = y => Math.max(0, Math.min(this.height, y));\n\n      gLinks\n        .attr('x1', d => clampX(d.source.x))\n        .attr('y1', d => clampY(d.source.y))\n        .attr('x2', d => clampX(d.target.x))\n        .attr('y2', d => clampY(d.target.y));\n\n      gNodes\n        .attr('cx', d => clampX(Math.max(0, Math.min(this.width, d.x))))\n        .attr('cy', d => clampY(Math.max(0, Math.min(this.height, d.y))))\n        .attr('id', d => 'catGraph-' + d.id);\n\n      const groups = {};\n      nodes.forEach(node => {\n        const index = getCategoryIndexAndLabel(node.id).index;\n        if (!groups[index]) {\n          groups[index] = [];\n        }\n        groups[index].push(node);\n      });\n      const mean = nodes => {\n        const xs = nodes.map(d => d.x).reduce((a, b) => a + b);\n        const ys = nodes.map(d => d.y).reduce((a, b) => a + b);\n        return { x: xs / nodes.length, y: ys / nodes.length - 10 };\n      };\n      const aggregated = Object.fromEntries(Object.entries(groups).map(([index, nodesIn]) => [index, mean(nodesIn)]));\n      gClusters\n        .classed('hidden', d => !aggregated[d.index])\n        .attr('x', d => aggregated[d.index] && aggregated[d.index].x)\n        .attr('y', d => aggregated[d.index] && aggregated[d.index].y);\n\n      // Tooltip\n      updateTooltipPosition();\n    });\n\n    gNodes\n      .on('mouseover', (_, d) => {\n        hoveredNode = d;\n        updateTooltip();\n      })\n      .on('mouseout', () => {\n        hoveredNode = null;\n        updateTooltip();\n      })\n      .on('click', (event, d) => {\n        if (d.id !== this.selectedCategory) {\n          this.selectedCategory = d.id;\n        } else {\n          this.selectedCategory = null;\n        }\n        updateHighlights();\n        event.stopPropagation(); // The event won't trigger on parent elements\n      });\n\n    this.svg.on('click', () => {\n      this.selectedCategory = null;\n      updateHighlights();\n    });\n\n    d3.select('#categories-graph-reset').on('click', () => {\n      this.selectedCategory = null;\n      updateHighlights();\n    });\n    updateHighlights(); // Initial update\n\n    this.container.node().append(this.svg.node());\n\n    //invalidation.then(() => simulation.stop());\n\n  }\n}\n\n\n\n\n\n\n","import * as d3 from 'd3';\nimport * as d3cloud from 'd3-cloud';\nimport * as seedrandom from 'seedrandom';\nimport { ALL, color } from './common';\n\nexport class Keywords {\n  constructor(papersKeywords) {\n    this.papersKeywords = papersKeywords;\n    this.container = d3.select('#keywords');\n    this.placeholder = d3.select('#keywords-placeholder');\n\n    const containerDom = this.container.node();\n    const aspect = containerDom.clientWidth / containerDom.clientHeight;\n    this.width = 1000;\n    this.height = this.width / aspect;\n\n    this.year = ALL;\n    this.category = ALL;\n    this.selected = null;\n  }\n\n  initialize(cloud) {\n    this.cloud = cloud;\n  }\n\n  setYear(year) {\n    if (this.year !== year) {\n      this.year = year;\n      this.update();\n    }\n  }\n\n  setCategory(category) {\n    if (this.category !== category) {\n      this.category = category;\n      this.update();\n    }\n  }\n\n  update() {\n    const keywordReset = d3.select('#keywords-reset');\n    keywordReset.classed('invisible', this.selected === null);\n\n    keywordReset.on('click', () => {\n      this.selected = null;\n      this.update();\n      this.cloud.update();\n    });\n\n    this.container.selectAll('*').remove();\n    const tooltip = d3.select('#keywords-tooltip');\n\n    const keywordsData = this.papersKeywords.keywords;\n    const yearData = keywordsData[this.year];\n    const data = yearData && yearData[this.category];\n    let shown;\n\n    const topCategoriesMatchForKeyword = (keyword, sizeTop = 1) => {\n      let topCategories = [];\n\n      Object.entries(yearData).filter(t => t[0] !== ALL).map(([category, data]) =>\n        data.keywords.forEach(([thatKeyword, count]) => {\n          if (keyword === thatKeyword) {\n            topCategories.push({ category: category, count: count });\n          }\n        }));\n\n      return topCategories.sort((cat1, cat2) => cat2.count - cat1.count).slice(0, sizeTop);\n    };\n\n\n\n    if (data && data.keywords.length) {\n      const keywordsData = data.keywords.slice(0, 50); // Looks good on most screens\n      // eslint-disable-next-line no-unused-vars\n      const total = data.total;\n      const counts = keywordsData.map(array => array[1]);\n      // eslint-disable-next-line no-unused-vars\n      const minCount = Math.min(...counts), maxCount = Math.max(...counts);\n\n      const draw = words => {\n        const svg = this.container.append('svg')\n          .attr('viewBox', [0, 0, this.width, this.height].join(' '))\n          .attr('class', 'max-w-full max-h-full overflow-visible')\n          .on('click', () => {\n            this.selected = null;\n            this.update();\n            this.cloud.update();\n          });\n\n        svg\n          .append('g')\n          .attr('transform', 'translate(' + layout.size()[0] / 2 + ',' + layout.size()[1] / 2 + ')')\n          .attr('text-anchor', 'middle')\n          .attr('font-weight', 'bold')\n          .selectAll('text')\n          .data(words)\n          .enter().append('text')\n          .style('font-size', d => d.size)\n          .attr('transform', d => 'translate(' + [d.x, d.y] + ')')\n          .classed('cursor-pointer', true).classed('select-none', true)\n          .attr('fill', d => {\n            const match = topCategoriesMatchForKeyword(d.text)[0];\n            // Due to the `ALL` selector, this can happen. In this case fall back to the default color\n            return color({ id: match != null ? match.category : '' });\n          })\n          .text(d => d.text)\n          .classed('opacity-20', d => this.selected !== null && d.text !== this.selected)\n          .on('click', (e, d) => {\n            e.stopPropagation();\n            this.selected = this.selected !== d.text ? d.text : null;\n            this.update();\n            this.cloud.update();\n          });\n      };\n\n      const minSize = 10, maxSize = 50;\n      const layout = d3cloud()\n        .size([this.width, this.height])\n        .words(keywordsData.map(([keyword, count]) => ({\n          text: keyword,\n          size: minSize + (maxSize - minSize) * count / maxCount,\n        })))\n        .padding(5)\n        .rotate(false)\n        .font('Poppins')\n        .fontSize(d => d.size)\n        .random(seedrandom(this.category))\n        .on('end', draw);\n\n      layout.start();\n      shown = true;\n    } else {\n      shown = false;\n    }\n\n    this.placeholder.classed('hidden', shown);\n\n    let hoveredWord = null;\n    const keywords = this.container.select('svg').selectAll('text');\n    keywords\n      .on('mouseover', (_, d) => {\n        hoveredWord = d;\n        updateTooltip();\n      })\n      .on('mouseout', () => {\n        hoveredWord = null;\n        updateTooltip();\n      });\n\n    const updateTooltipPosition = () => {\n      const word = hoveredWord;\n      if (word) {\n        tooltip\n          .style('top', ((word.y / this.height + 0.5) * this.container.node().clientHeight) + 'px')\n          .style('left', ((word.x / this.width + 0.5) * this.container.node().clientWidth) + 'px');\n      }\n    };\n\n    const updateTooltip = () => {\n      updateTooltipPosition();\n      let count;\n\n      if (hoveredWord) {\n        for (let i = 0; i < data.keywords.length; i++)\n          if (data.keywords[i][0] === hoveredWord.text)\n            count = data.keywords[i][1];\n      }\n\n      //d3.select('#keywords-tooltip-id').text(hoveredBar && hoveredBar.id).style('color', hoveredBar && color(hoveredBar));\n      d3.select('#keywords-tooltip-count').text(hoveredWord && count);\n      d3.select('#keywords-tooltip-category').text(hoveredWord && (this.category + ((this.category === ALL) ? (' categories') : (''))))\n        .style('color', hoveredWord && color({ id: this.category }));\n      d3.select('#keywords-tooltip-year').text(hoveredWord && ('(' + ((this.year === ALL) ? ('All time period') : ('year ' + this.year)) + ')'));\n\n      let top3;\n      if (hoveredWord) {\n        top3 = topCategoriesMatchForKeyword(hoveredWord.text, 3);\n      }\n      if (top3)\n        for (let i = 0; i < top3.length; i++) {\n          const categoryElementId = '#keywords-tooltip-category' + (i + 1);\n          const countElementId = '#keywords-tooltip-count' + (i + 1);\n          d3.select(categoryElementId).text(hoveredWord && (top3[i].category)).style('color', hoveredWord && color({ id: top3[i].category }));\n          d3.select(countElementId).text(hoveredWord && ('(' + top3[i].count + ' papers)'));\n        }\n\n      tooltip.classed('hidden', !hoveredWord);\n    };\n\n  }\n}\n","import * as d3 from 'd3';\nimport { heightChart, margin, widthChart } from './common';\n\n/*\nconst statsOf = values => {\n  const n = values.length;\n  const mean = values.reduce((a, b) => a + b, 0) / n;\n  const variance = values.map(v => (v - mean)).map(x => x * x).reduce((a, b) => a + b, 0) / (n - 1);\n  const deviation = Math.sqrt(variance);\n  return { mean, variance, deviation };\n};\n*/\nexport class LinePlot {\n\n  constructor() {\n    this.dataLine = [];\n    this.lineColor = '';\n    this.year = '';\n  }\n\n  setData(dataLine, lineColor, year) {\n    this.dataLine = dataLine;\n    this.lineColor = lineColor;\n    this.year = year;\n    this.update();\n  }\n\n  update() {\n\n    let basedLine = [];\n    if (this.dataLine.length === 2) {\n      basedLine =  this.dataLine[1]['values'];\n    } else if (this.dataLine.length === 1) {\n      basedLine = this.dataLine[0]['values'];\n    }\n\n    //const { mean, deviation } = statsOf(this.dataLine.map(o => o.value));\n\n    d3.select('#published-line').select('svg').remove();\n\n    this.svg = d3.select('#published-line')\n      .append('svg')\n      .attr('viewBox', [0, 0, widthChart + margin.left + margin.right, heightChart + margin.top + margin.bottom].join(' '))\n      .attr('class', 'max-w-full max-h-full');\n\n    this.svg.classed('opacity-20', !this.dataLine.length);\n\n    let line = d3.line()\n      .defined(d => !isNaN(d.value))\n      .x(d => x(d.date))\n      .y(d => y(d.value) + margin.top);\n\n    let yAxis = g => g\n      .attr('transform', `translate(${margin.left},${margin.top})`)\n      .call(d3.axisLeft(y))\n      .call(g => g.select('.tick:last-of-type text')\n        .clone()\n        .attr('x', 3)\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(basedLine.y));\n\n    let y = d3.scaleLinear()\n      .domain([0, d3.max(this.dataLine, d => d3.max(d.values, l => l.value))]).nice()\n      .range([heightChart, 0]);\n\n    let x = d3.scaleTime()\n      .domain(d3.extent(basedLine, d => d.date))\n      .range([margin.left, widthChart + margin.left]);\n\n    let xAxis = g => g\n      .attr('transform', `translate(0,${heightChart + margin.top})`)\n      .call(d3.axisBottom(x).ticks(widthChart / 80));\n\n    this.svg.append('g')\n      .call(xAxis);\n\n    this.svg.append('text')\n      .attr('transform', 'translate(' + (widthChart / 2 + margin.left) + ' , ' + (heightChart + margin.top + margin.bottom / 2) + ')')\n      .style('text-anchor', 'middle')\n      .style('font-weight', 'bold')\n      .style('font-size', '50%')\n      .text('date');\n\n    this.svg.append('g')\n      .call(yAxis);\n\n    this.svg.append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('x', 0 - (heightChart / 2))\n      .attr('y', 0)\n      .style('font-weight', 'bold')\n      .style('font-size', '50%')\n      .style('text-anchor', 'middle')\n      .text('#papers');\n\n    this.svg.selectAll('.tick').selectAll('text')\n      .style('font-size', '75%');\n\n    if (this.dataLine.length !== 0) {\n      const mainPath = this.svg\n        .datum(this.dataLine[0])\n        .append('path')\n        .attr('fill', 'none')\n        .attr('stroke', this.lineColor)\n        .attr('stroke-width', 1.5)\n        .attr('d', d => line(d['values']));\n\n      if (this.dataLine.length === 2) {\n        this.svg\n          .datum(this.dataLine[1])\n          .append('path')\n          .attr('fill', 'none')\n          .attr('stroke', '#bab0ab')\n          .attr('stroke-width', 1.5)\n          .attr('d', d => line(d['values']))\n          .attr('id', 'prevYearLine');\n\n        this.svg.append('text')\n          .attr('x', margin.left + widthChart - 5) // The '5' is just an extra margin\n          .attr('y', y(this.dataLine[1].values[this.dataLine[1].values.length - 1].value) + margin.top)\n          .style('font-size', '8px')\n          .style('text-anchor', 'end')\n          .attr('fill', '#bab0ab')\n          .text(this.year - 1);\n      }\n\n      const totalLength = mainPath.node().getTotalLength();\n\n      mainPath\n        .attr('stroke-dasharray', totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .transition()\n        .duration(500)\n        .attr('stroke-dashoffset', 0);\n    }\n    d3.select('#published-line').node().append(this.svg.node());\n  }\n}\n\n\n\n","import * as d3 from 'd3';\nimport { sliderBottom } from 'd3-simple-slider';\nimport { ALL } from './common';\n\nexport class Slider {\n  constructor(categoriesCounts) {\n    let minValue = null, maxValue = null;\n    Object.keys(categoriesCounts).forEach(year => { // Represented as strings + contains \"all\"\n      if (year !== ALL) {\n        const yearInt = parseInt(year);\n        if (minValue === null || yearInt < minValue) {\n          minValue = yearInt;\n        }\n        if (maxValue === null || yearInt > maxValue) {\n          maxValue = yearInt;\n        }\n      }\n    });\n\n    this.tickAllTime = maxValue + 1;\n\n    this.sliderTime = sliderBottom()\n      .min(minValue)\n      .max(maxValue + 1)\n      .step(1)\n      .width(700)\n      .tickFormat(d => d !== maxValue + 1 ? d.toString() : 'All Time')\n      .ticks(maxValue - minValue + 1)\n      .default(maxValue + 1);\n\n    this.svg = d3\n      .create('svg')\n      .attr('viewBox', [0, 0, 750, 50].join(' '))\n      .classed('overflow-visible', true);\n\n    this.gTime = this.svg\n      .append('g')\n      .attr('transform', 'translate(25,10)');\n\n    this.gTime.call(this.sliderTime);\n\n    d3.select('#slider-time').node().append(this.svg.node());\n  }\n\n  initialize(catGraph, cloud, barPlot, linePlot, keywords) {\n    const sliderReset = d3.select('#slider-reset');\n\n    this.sliderTime.on('end', val => {\n      const year = val === this.tickAllTime ? ALL : val;\n\n      sliderReset.classed('invisible', year === ALL);\n\n      keywords.selected = null;\n\n      catGraph.setYear(year);\n      cloud.setYear(year);\n      keywords.year = year;\n      keywords.update();\n    });\n\n    sliderReset.on('click', () => {\n      this.sliderTime.value('2021');\n\n      sliderReset.classed('invisible', true);\n      keywords.selected = null;\n\n      catGraph.setYear(ALL);\n      cloud.setYear(ALL);\n      keywords.year = ALL;\n      keywords.update();\n    });\n  }\n\n  update() {\n\n  }\n}\n","import '../styles/index.scss';\nimport 'tailwindcss/tailwind.css';\nimport '@fontsource/poppins';\nimport { BarPlot } from './bar';\nimport { Cloud } from './cloud';\nimport { Graph } from './graph';\nimport { Keywords } from './keywords';\nimport { LinePlot } from './time';\nimport { Slider } from './slider';\nimport { makeBodyVisible } from './page';\n\nif (process.env.NODE_ENV === 'development') { // Do not remove: used for hot reload\n  require('../index.html');\n}\n\nconst fetchJson = filename => fetch(`public/data/${filename}`).then(response => response.json());\n\nPromise.all([\n  'categories_names.json',\n  'categories_graph.json',\n  'categories_counts.json',\n  'papers.json',\n  'paper_counts.json',\n  'papers_keywords.json',\n].map(fetchJson)).then(([categoriesNames, graph, categoriesCounts, papers, paperCounts, papersKeywords]) => {\n  makeBodyVisible();\n\n  // Instantiate visualizations\n  const slider = new Slider(categoriesCounts);\n  const catGraph = new Graph(categoriesNames, graph, categoriesCounts, paperCounts);\n  const cloud = new Cloud(papers);\n  const barPlot = new BarPlot();\n  const linePlot = new LinePlot();\n  const keywords = new Keywords(papersKeywords);\n\n  // Set back references\n  slider.initialize(catGraph, cloud, barPlot, linePlot, keywords);\n  catGraph.initialize(cloud, barPlot, linePlot, keywords);\n  cloud.initialize(catGraph, keywords);\n  barPlot.initialize(catGraph);\n  keywords.initialize(cloud);\n\n  // Initial update (required)\n  slider.update();\n  catGraph.update();\n  cloud.update();\n  barPlot.update();\n  linePlot.update();\n  keywords.update();\n\n});\n\n","export const makeBodyVisible = () => {\n\n  let body = document.getElementsByTagName('body')[0];\n  body.style.visibility = 'visible';\n\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdata_visualization_ufa\"] = self[\"webpackChunkdata_visualization_ufa\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [199], function() { return __webpack_require__(9192); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}